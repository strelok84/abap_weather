{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","state","city","lat","lon","data","timezone","maxPressure","maxDiff","request","url","fetch","setLat","event","preventDefault","setState","prevState","target","value","setLon","setSity","getWeather","componentDidMount","a","this","response","ok","json","console","log","pressure","daily","Math","max","apply","temp","night","morn","toFixed","className","type","onChange","placeholder","onSubmit","e","stopPropagation","name","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAAe,I,YCyIAA,E,4MApIbC,MAAQ,CACNC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLC,KAAM,CAACC,SAAS,iBAChBC,YAAa,0DACbC,QAAS,2D,EAqDXC,QAAU,SAACC,GACT,OAAOC,MAAMD,I,EAGfE,OAAS,SAACC,GACRA,EAAMC,iBACN,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5Bb,IAAKU,EAAMI,OAAOC,W,EAGtBC,OAAS,SAACN,GACRA,EAAMC,iBACN,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BZ,IAAKS,EAAMI,OAAOC,W,EAGtBE,QAAU,SAACP,GACTA,EAAMC,iBACN,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5Bd,KAAMW,EAAMI,OAAOC,W,EAGvBG,WAAa,SAACR,GACZA,EAAMC,iBAEN,EAAKQ,qB,8FA3EP,wCAAAC,EAAA,6DACQb,EADR,8DACqEc,KAAKvB,MAAME,IADhF,gBAC2FqB,KAAKvB,MAAMG,IADtG,yEAGyBoB,KAAKf,QAAQC,GAHtC,YAGQe,EAHR,QAIeC,GAJf,iCAKuBD,EAASE,OALhC,OAKUtB,EALV,OAMIuB,QAAQC,IAAIxB,GACZmB,KAAKT,SAAS,CACZV,KAAMA,IAEFyB,EAAW,CACfN,KAAKvB,MAAMI,KAAK0B,MAAM,GAAGD,SACzBN,KAAKvB,MAAMI,KAAK0B,MAAM,GAAGD,SACzBN,KAAKvB,MAAMI,KAAK0B,MAAM,GAAGD,SACzBN,KAAKvB,MAAMI,KAAK0B,MAAM,GAAGD,SACzBN,KAAKvB,MAAMI,KAAK0B,MAAM,GAAGD,UAErBvB,EAAcyB,KAAKC,IAAIC,MAAM,KAAMJ,GACzCN,KAAKT,SAAS,CACZR,YAAaA,IAET4B,EAAO,GAETX,KAAKvB,MAAMI,KAAK0B,MAAM,GAAGI,KAAKC,MAC9BZ,KAAKvB,MAAMI,KAAK0B,MAAM,GAAGI,KAAKE,QAG9Bb,KAAKvB,MAAMI,KAAK0B,MAAM,GAAGI,KAAKC,MAC9BZ,KAAKvB,MAAMI,KAAK0B,MAAM,GAAGI,KAAKE,QAG9Bb,KAAKvB,MAAMI,KAAK0B,MAAM,GAAGI,KAAKC,MAC9BZ,KAAKvB,MAAMI,KAAK0B,MAAM,GAAGI,KAAKE,QAG9Bb,KAAKvB,MAAMI,KAAK0B,MAAM,GAAGI,KAAKC,MAC9BZ,KAAKvB,MAAMI,KAAK0B,MAAM,GAAGI,KAAKE,QAG9Bb,KAAKvB,MAAMI,KAAK0B,MAAM,GAAGI,KAAKC,MAC9BZ,KAAKvB,MAAMI,KAAK0B,MAAM,GAAGI,KAAKE,OAG5B7B,EAAUwB,KAAKC,IAAIC,MAAM,KAAMC,GAAMG,QAAQ,GACnDd,KAAKT,SAAS,CACZP,QAASA,IA7Cf,iD,0EA6EA,WACE,OACE,sBAAK+B,UAAU,MAAf,UACE,iCACE,uBACEC,KAAK,OACLC,SAAUjB,KAAKZ,OACf8B,YAAY,oFAEd,uBACEF,KAAK,SACLG,SAAU,SAACC,GACTA,EAAE9B,iBACF8B,EAAEC,wBAIR,iCACE,uBACEL,KAAK,OACLM,KAAK,OACLL,SAAUjB,KAAKL,OACfuB,YAAY,0FAEd,uBACEF,KAAK,SACLG,SAAU,SAACC,GACTA,EAAE9B,iBACF8B,EAAEC,wBAKR,uBACEE,QAASvB,KAAKH,WACdmB,KAAK,SACLtB,MAAM,sGAER,wEAAgBM,KAAKvB,MAAMI,KAAKC,YAChC,gMAAyCkB,KAAKvB,MAAMM,YAApD,yBACA,uPAAmDiB,KAAKvB,MAAMO,QAA9D,oB,GA/HUwC,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.170505cf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    city: null,\n    lat: \"53\",\n    lon: \"50\",\n    data: {timezone:\"Europe/Samara\"},\n    maxPressure: \"нет данных\",\n    maxDiff: \"нет данных\",\n  };\n\n  async componentDidMount() {\n    const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${this.state.lat}&lon=${this.state.lon}&units=metric&lang=ru&appid=6ba3a2f78b90ca9f7b9f414c026b2e2d`;\n    //https://api.openweathermap.org/data/2.5/weather?id=2172797&appid=6ba3a2f78b90ca9f7b9f414c026b2e2d\n    const response = await this.request(url);\n    if (response.ok) {\n      const data = await response.json();\n      console.log(data);\n      this.setState({\n        data: data,\n      });\n      const pressure = [\n        this.state.data.daily[0].pressure,\n        this.state.data.daily[1].pressure,\n        this.state.data.daily[2].pressure,\n        this.state.data.daily[3].pressure,\n        this.state.data.daily[4].pressure,\n      ];\n      const maxPressure = Math.max.apply(null, pressure);\n      this.setState({\n        maxPressure: maxPressure,\n      });\n      const temp = [\n        +(\n          this.state.data.daily[0].temp.night -\n          this.state.data.daily[0].temp.morn\n        ),\n        +(\n          this.state.data.daily[1].temp.night -\n          this.state.data.daily[1].temp.morn\n        ),\n        +(\n          this.state.data.daily[2].temp.night -\n          this.state.data.daily[2].temp.morn\n        ),\n        +(\n          this.state.data.daily[3].temp.night -\n          this.state.data.daily[3].temp.morn\n        ),\n        +(\n          this.state.data.daily[4].temp.night -\n          this.state.data.daily[4].temp.morn\n        ),\n      ];\n      const maxDiff = Math.max.apply(null, temp).toFixed(2);\n      this.setState({\n        maxDiff: maxDiff,\n      });\n    }\n  }\n\n  request = (url) => {\n    return fetch(url);\n  };\n\n  setLat = (event) => {\n    event.preventDefault();\n    this.setState((prevState) => ({\n      lat: event.target.value,\n    }));\n  };\n  setLon = (event) => {\n    event.preventDefault();\n    this.setState((prevState) => ({\n      lon: event.target.value,\n    }));\n  };\n  setSity = (event) => {\n    event.preventDefault();\n    this.setState((prevState) => ({\n      city: event.target.value,\n    }));\n  };\n  getWeather = (event) => {\n    event.preventDefault();\n   \n    this.componentDidMount();\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <form>\n          <input\n            type=\"text\"\n            onChange={this.setLat}\n            placeholder=\"Введите широту\"\n          ></input>\n          <input\n            type=\"submit\"\n            onSubmit={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n          ></input>\n        </form>\n        <form>\n          <input\n            type=\"text\"\n            name=\"city\"\n            onChange={this.setLon}\n            placeholder=\"Введите долготу\"\n          ></input>\n          <input\n            type=\"submit\"\n            onSubmit={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n          ></input>\n        </form>\n        \n        <input\n          onClick={this.getWeather}\n          type=\"submit\"\n          value=\"Рассчитать погоду\"\n        ></input>\n        <h2>{`Город - ${this.state.data.timezone}`}</h2>\n        <div>{`Наибольшее давление за 5 дней - ${this.state.maxPressure} кПа`}</div>\n        <div>{`Наибольшая разница температур за 5 дней - ${this.state.maxDiff} \\u2103`}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}